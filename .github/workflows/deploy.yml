name: Deploy Backend

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Build
        env:
          PORT: ${{ vars.PORT }}
          APP_URL: ${{ vars.APP_URL }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_USERNAME: ${{ vars.DB_USERNAME }}
          DB_DATABASE: ${{ vars.DB_DATABASE }}
          SMTP_HOST: ${{ vars.SMTP_HOST }}
          SMTP_PORT: ${{ vars.SMTP_PORT }}
          SMTP_FROM: ${{ vars.SMTP_FROM }}
          SLDL_CONFIG_PATH: ${{ vars.SLDL_CONFIG_PATH }}
          SLDL_PATH: ${{ vars.SLDL_PATH }}
          DOWNLOAD_DIR: ${{ vars.DOWNLOAD_DIR }}
          STREAM_TEMP_DIR: ${{ vars.STREAM_TEMP_DIR }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          LASTFM_API_KEY: ${{ secrets.LASTFM_API_KEY }}
          LASTFM_API_SECRET: ${{ secrets.LASTFM_API_SECRET }}
          DISCOGS_CONSUMER_KEY: ${{ secrets.DISCOGS_CONSUMER_KEY }}
          DISCOGS_CONSUMER_SECRET: ${{ secrets.DISCOGS_CONSUMER_SECRET }}
        run: |
          npm ci
          npm run build

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/swgz-back
            git pull
            npm ci
            rm -rf dist
            npm run build
            npm ci --only=production  # Reinstall only production deps
            sudo systemctl restart swgz-back
            sudo systemctl status swgz-back --no-pager